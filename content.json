{"meta":{"title":"我和我的宝贝凤凤","subtitle":"我爱我的小胖猪","description":"田泽","author":"大胖猪","url":"http://yoursite.com","root":"/"},"pages":[{"title":"404","text":"","path":"404/index.html","date":"10-24","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"10-24","excerpt":""}],"posts":[{"title":"my_frist_blog","text":"","path":"2019/10/27/my-frist-blog/","date":"10-27","excerpt":"","tags":[]},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2019/10/24/hello-world/","date":"10-24","excerpt":"","tags":[]},{"title":"Python3 模拟登录新浪微博","text":"在无声的世界里，默默地等待着他的出现 ----《声之形》 大概有两个月左右没更新过文章了，没想到还会有人来参观这个博客～访问人数在逐渐增加，这一点我挺开心的～最近也挺忙的……开学了不说～我还报了驾校，也快考科目一了，练习倒库练了一个礼拜，前一个小时倒进去没啥问题的，过了几个小时后又进不去了…….唉。行～废话也不多说，这次我介绍一下如何用Python来登录新浪微博~ 访问新浪微博URL: http://weibo.com,F12打开开发者工具抓包 然后什么都不做等待几秒钟后他会出现push_count.json的请求，而且每隔几秒钟就会出现一个 js里面的内容是这样的 try{STK_150823119986721({&quot;code&quot;:1,&quot;data&quot;:{&quot;remind_settings&quot;:{&quot;msgbox&quot;:1},&quot;app_message&quot;:[]}});}catch(e){} 用户名的生成接着，输入帐号和密码(只输入，不登录),又抓到了一个prelogin.php的请求，然后刚才出现push_count.json请求的时间会停止轮询~ 看一下他的url https://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=MTQ3MzAxODY3MSU0MHFxLmNvbQ%3D%3D&amp;rsakt=mod&amp;checkpin=1&amp;client=ssologin.js(v1.4.19)&amp;_=1508233679833这个url里面只需注意一下su参数 MTQ3MzAxODY3MSU0MHFxLmNvbQ%3D%3D 我们用Python里面的base64来解一下不过这里注意一个问题,这个字符串里面%3D%3D base64没法解,但是去掉就会报错:binascii.Error: Incorrect padding 这个问题只需要把 %3D 换成 = 就行了 用户名中可能包含@这样的符号，解码之后@变成了%40 &gt;&gt;&gt; import base64 &gt;&gt;&gt; base64.b64decode(&quot;MTQ3MzAxODY3MSU0MHFxLmNvbQ==&quot;) # %3D 就是 = 两个%3D 就是== b&apos;1473018671%40qq.com&apos; # %40就是 @ &gt;&gt;&gt; 看见没，和咱们输入的帐号一样~ 得到预登录参数咱们已经知道prelogin.php的请求里的su参数是怎么生成的了所以就只需要把url里面的su参数改一下就可以拿到预登录的数据接着用浏览器打开刚才抓到的prelogin.php?请求的url,他返回的是: sinaSSOController.preloginCallBack({&quot;retcode&quot;:0,&quot;servertime&quot;:1508233777,&quot;pcid&quot;:&quot;gz-074aaac89dd6886019ebc121f0137b79ec17&quot;,&quot;nonce&quot;:&quot;AFJHZY&quot;,&quot;pubkey&quot;:&quot;EB2A38568661887FA180BDDB5CABD5F21C7BFD59C090CB2D245A87AC253062882729293E5506350508E7F9AA3BB77F4333231490F915F6D63C55FE2F08A49B353F444AD3993CACC02DB784ABBB8E42A9B1BBFFFB38BE18D78E87A0E41B9B8F73A928EE0CCEE1F6739884B9777E4FE9E88A1BBE495927AC4A799B3181D6442443&quot;,&quot;rsakv&quot;:&quot;1330428213&quot;,&quot;is_openlock&quot;:0,&quot;showpin&quot;:0,&quot;exectime&quot;:88})这里面我们需要拿4个参数,servertime nonce pubkey rsakv 输入帐号密码，登录现在找一下他的POST参数接着抓包在抓包前，先打开preserve log，不然就一闪而过，抓不到了~当输入帐号密码登录之后~你会看见一个login.php?的请求 https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.19)这个url是一个POST，我们可以拿到他POST出去的数据参数，就是Form Data里面的东西有些参数是不是很眼熟呀？～～ su: 用户名，咱们用base64可以搞出来 servertime: 服务器时间，通过预登录得到 nonce: 通过预登录得到 rsakv: 通过预登录得到 sp: 密码,通过rsa加密,这个东西在ssologin.js里面,稍后介绍~ 其他参数保持不变~ 加密密码在login.php?client=ssologin.js(v1.4.19) 下面有一个ssologin.js顺便看一下home?wvr=5&amp;lf=reg我们后面会用到~ 长达2000多行~~在900行左右你会看见…… 是吧！我们得到这个东西 var RSAKey = new sinaSSOEncoder.RSAKey(); RSAKey.setPublic(me.rsaPubkey, &quot;10001&quot;); password = RSAKey.encrypt([me.servertime, me.nonce].join(&quot;\\t&quot;) + &quot;\\n&quot; + password)加密方法他有两种加密方法就看RSA就行了~注意一下 &#39;10001&#39; 需要转换成十进制就是 65537 上代码！需要用到的模块: import urllib import urllib.request import urllib.parse import base64 import rsa import json import http.cookiejar import binascii import re from bs4 import BeautifulSoup需要安装的模块: pip install rsa pip install bs4初始化初始化username 和 password 12345class WeiboLogin(): def __init__(self,username,password): self.username = username self.password = password Cookie建立一个cookies，用于登录过程的cookies绑定~ 123456789def enableCookies(self): # 建立一个cookies 容器 cookie_container = http.cookiejar.CookieJar() # 将一个cookies容器和一个HTTP的cookie的处理器绑定 cookie_support = urllib.request.HTTPCookieProcessor(cookie_container) # 创建一个opener,设置一个handler用于处理http的url打开 opener = urllib.request.build_opener(cookie_support, urllib.request.HTTPHandler) # 安装opener，此后调用urlopen()时会使用安装过的opener对象 urllib.request.install_opener(opener) 加密用户名解码之后@变成了%40,如果帐号的纯数字的，会出现%3D,对应为=加密之前必须先把username字符串转化成url的编码样式，实现这一功能的是urllib.request.qoutebase64编码是bytes的形式，但是我们需要得到str,才能被接受 1234def getusername(self): username_req_qo = urllib.request.quote(self.username) username_bsencode = base64.b64encode(bytes(username_req_qo,encoding=&apos;utf-8&apos;)) return username_bsencode.decode(&quot;utf-8&quot;).split(&quot;=&quot;)[0] 获取4个参数12345678910111213def getprelogin(self): prelogin_url = &quot;https://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=&#123;&#125;&amp;rsakt=mod&amp;checkpin=1&amp;client=ssologin.js(v1.4.19)&amp;_=1507974787556&quot;.format(self.getusername()) pre = re.compile(&apos;sinaSSOController.preloginCallBack(.*)&apos;) request = urllib.request.Request(prelogin_url) response = urllib.request.urlopen(request) read_data = response.read().decode(&quot;utf-8&quot;) date = pre.search(read_data).group(1)[1:-1] date_json = json.loads(date) servertime = str(date_json[&apos;servertime&apos;]) nonce = date_json[&apos;nonce&apos;] pubkey = date_json[&apos;pubkey&apos;] rsakv = date_json[&apos;rsakv&apos;] return servertime,nonce,pubkey,rsakv 加密密码上面说过了&#39;10001&#39; 需要转换成十进制就是 65537 12345678def getpassword(self): servertime,nonce,pubkey,rsakv = self.getprelogin() pw_string = str(servertime) + &apos;\\t&apos; + str(nonce) + &apos;\\n&apos; + str(self.password) key = rsa.PublicKey(int(pubkey,16),65537) # 10001 == 65537 转10进制 pw_encrypt = rsa.encrypt(pw_string.encode(&apos;utf-8&apos;),key) self.password = &apos;&apos; # 安全起见~清空密码~ passwd = binascii.b2a_hex(pw_encrypt) return passwd POST1234567891011121314151617181920212223242526def build_post_data(self): servertime, nonce, pubkey, rsakv = self.getprelogin() post_data = &#123; &apos;entry&apos;: &apos;weibo&apos;, &apos;gateway&apos;: &apos;1&apos;, &apos;from&apos;: &apos;&apos;, &apos;savestate&apos;: &apos;7&apos;, &apos;qrcode_flag&apos;: &apos;false&apos;, &apos;useticket&apos;: &apos;1&apos;, &quot;pagerefer&quot;:&quot;http://passport.weibo.com/visitor/visitor?entry=miniblog&amp;a=enter&amp;url=http%3A%2F%2Fweibo.com%2F&amp;domain=.weibo.com&amp;ua=php-sso_sdk_client-0.6.14&quot;, &apos;vsnf&apos;: &apos;1&apos;, &apos;su&apos;: self.getusername(), &apos;service&apos;:&apos;miniblog&apos;, &apos;servertime&apos;: servertime, &apos;nonce&apos;: nonce, &apos;pwencode&apos;: &apos;rsa2&apos;, &apos;rsakv&apos;: rsakv, &apos;sp&apos;: self.getpassword(), &apos;sr&apos;: &apos;1920 * 1080&apos;, &apos;ncoding&apos;: &apos;UTF - 8&apos;, &apos;prelt&apos;: &apos;912&apos;, &apos;url&apos;: &quot;http://weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack&quot;, &apos;returntype&apos;: &apos;META&apos; &#125; data = urllib.parse.urlencode(post_data).encode(&apos;utf-8&apos;) return data 登录123456789def login(self): url = &apos;https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.19)&apos; data = self.build_post_data() self.enableCookies() headers = &#123;&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36&quot;&#125; requests1 = urllib.request.Request(url,data=data,headers=headers) reqopen1 = urllib.request.urlopen(requests1) reqread1 = reqopen1.read().decode(&quot;GBK&quot;) print(reqread1) 到这一步登录之后，恶心的重定向出现了….. 返回的内容: &lt;html&gt; &lt;head&gt; &lt;title&gt;新浪通行证&lt;/title&gt; &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=&amp;#39;https://login.sina.com.cn/crossdomain2.php?action=login&amp;entry=weibo&amp;r=https%3A%2F%2Fpassport.weibo.com%2Fwbsso%2Flogin%3Fssosavestate%3D1539793002%26url%3Dhttp%253A%252F%252Fweibo.com%252Fajaxlogin.php%253Fframelogin%253D1%2526callback%253Dparent.sinaSSOController.feedBackUrlCallBack%26ticket%3DST-NTUxMzA4ODA3Mw%3D%3D-1508257002-gz-755E02FA479243D1D971FC7697414B96-1%26retcode%3D0&amp;sr=1920+%2A+1080&amp;#39;&quot;/&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=GBK&quot; /&gt; &lt;/head&gt; &lt;body bgcolor=&quot;#ffffff&quot; text=&quot;#000000&quot; link=&quot;#0000cc&quot; vlink=&quot;#551a8b&quot; alink=&quot;#ff0000&quot;&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt; location.replace(&quot;https://login.sina.com.cn/crossdomain2.php?action=login&amp;entry=weibo&amp;r=https%3A%2F%2Fpassport.weibo.com%2Fwbsso%2Flogin%3Fssosavestate%3D1539793002%26url%3Dhttp%253A%252F%252Fweibo.com%252Fajaxlogin.php%253Fframelogin%253D1%2526callback%253Dparent.sinaSSOController.feedBackUrlCallBack%26ticket%3DST-NTUxMzA4ODA3Mw%3D%3D-1508257002-gz-755E02FA479243D1D971FC7697414B96-1%26retcode%3D0&amp;sr=1920+%2A+1080&quot;); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;重定向的url写在 location.replace的后面可以用正则，可以用bs4或者你觉得有更好的方法 更改一下，我用bs4 12345678910111213141516def login(self): url = &apos;https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.19)&apos; data = self.build_post_data() self.enableCookies() headers = &#123;&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36&quot;&#125; requests1 = urllib.request.Request(url,data=data,headers=headers) reqopen1 = urllib.request.urlopen(requests1) reqread1 = reqopen1.read().decode(&quot;GBK&quot;) bs = BeautifulSoup(reqread1,&apos;lxml&apos;) bfind = bs.find(&apos;script&apos;) for i in bfind: p = i.strip().split(&apos;&quot;&apos;)[1] requests2 = urllib.request.Request(p) reqopen2 = urllib.request.urlopen(requests2) reqread2 = reqopen2.read() print(reqread2) 然后…. b&apos;&lt;html&gt;\\n&lt;head&gt;\\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=GBK&quot; /&gt;\\n&lt;title&gt;\\xd0\\xc2\\xc0\\xcb\\xcd\\xa8\\xd0\\xd0\\xd6\\xa4&lt;/title&gt;\\n\\n\\n&lt;script charset=&quot;utf-8&quot; src=&quot;https://i.sso.sina.com.cn/js/ssologin.js&quot;&gt;&lt;/script&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n\\xd5\\xfd\\xd4\\xda\\xb5\\xc7\\xc2\\xbc ...\\n&lt;script&gt;\\ntry{sinaSSOController.setCrossDomainUrlList({&quot;retcode&quot;:0,&quot;arrURL&quot;:[&quot;https:\\\\/\\\\/passport.weibo.com\\\\/wbsso\\\\/login?ticket=ST-NTUxMzA4ODA3Mw%3D%3D-1508257418-gz-1D704A04699B6A20EFE6F4123E677198-1&amp;ssosavestate=1539793417&quot;,&quot;https:\\\\/\\\\/passport.97973.com\\\\/sso\\\\/crossdomain?action=login&amp;savestate=1539793417&quot;,&quot;https:\\\\/\\\\/passport.weibo.cn\\\\/sso\\\\/crossdomain?action=login&amp;savestate=1&quot;]});}\\n\\t\\tcatch(e){\\n\\t\\t\\tvar msg = e.message;\\n\\t\\t\\tvar img = new Image();\\n\\t\\t\\tvar type = 1;\\n\\t\\t\\timg.src = \\&apos;https://login.sina.com.cn/sso/debuglog?msg=\\&apos; + msg +\\&apos;&amp;type=\\&apos; + type;\\n\\t\\t}try{sinaSSOController.crossDomainAction(\\&apos;login\\&apos;,function(){location.replace(\\&apos;https://passport.weibo.com/wbsso/login?ssosavestate=1539793417&amp;url=http%3A%2F%2Fweibo.com%2Fajaxlogin.php%3Fframelogin%3D1%26callback%3Dparent.sinaSSOController.feedBackUrlCallBack&amp;ticket=ST-NTUxMzA4ODA3Mw==-1508257417-gz-64BE9EFA64E07479B7DB6F8882CA661C-1&amp;retcode=0\\&apos;);});}\\n\\t\\tcatch(e){\\n\\t\\t\\tvar msg = e.message;\\n\\t\\t\\tvar img = new Image();\\n\\t\\t\\tvar type = 2;\\n\\t\\t\\timg.src = \\&apos;https://login.sina.com.cn/sso/debuglog?msg=\\&apos; + msg +\\&apos;&amp;type=\\&apos; + type;\\n\\t\\t}\\n&lt;/script&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;&apos;又是一个重定向…….好嘞bs4不好抓了用正则吧~ 123456789101112131415161718192021222324252627def login(self): url = &apos;https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.19)&apos; data = self.build_post_data() self.enableCookies() headers = &#123;&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36&quot;&#125; requests1 = urllib.request.Request(url,data=data,headers=headers) reqopen1 = urllib.request.urlopen(requests1) reqread1 = reqopen1.read().decode(&quot;GBK&quot;) bs = BeautifulSoup(reqread1,&apos;lxml&apos;) bfind = bs.find(&apos;script&apos;) for i in bfind: p = i.strip().split(&apos;&quot;&apos;)[1] requests2 = urllib.request.Request(p) reqopen2 = urllib.request.urlopen(requests2) reqread2 = reqopen2.read() bss = BeautifulSoup(reqread2,&apos;lxml&apos;) bff = bss.find_all(&apos;script&apos;)[1] try: p2 = re.compile(r&apos;location.replace(.*?);&#125;&apos;) for i in bff: get_p2 = p2.findall(i)[0][2:-2] requests3 = urllib.request.Request(get_p2) reqopen3 = urllib.request.urlopen(requests3) reqread3 = reqopen3.read().decode(&apos;utf-8&apos;) print(reqread3) except IndexError: print(&quot;Login Error!&quot;) 返回结果: 12/usr/bin/python3.5 /home/crazyrookie/Documents/Python/reptile/weibo_login.py&lt;html&gt;&lt;head&gt;&lt;script language=&apos;javascript&apos;&gt;parent.sinaSSOController.feedBackUrlCallBack(&#123;&quot;result&quot;:true,&quot;userinfo&quot;:&#123;&quot;uniqueid&quot;:&quot;5513088073&quot;,&quot;userid&quot;:null,&quot;displayname&quot;:null,&quot;userdomain&quot;:&quot;?wvr=5&amp;lf=reg&quot;&#125;&#125;);&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 又是一个重定向…….但是注意到里面有个?wvr=5&amp;lf=reg字段，看看刚才手工登陆抓到的包，就是我让各位顺便看一下的那个地方,这是是主页链接的一部分。再写一个正则,把?wvr=5&amp;lf=reg拼接一个url出来，就可以轻松而愉悦地模拟登陆了！ 完整代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134import urllibimport urllib.requestimport urllib.parseimport base64import rsaimport jsonimport http.cookiejarimport binasciiimport refrom bs4 import BeautifulSoupclass WeiboLogin(): def __init__(self,username,password): self.username = username self.password = password def enableCookies(self): # 建立一个cookies 容器 cookie_container = http.cookiejar.CookieJar() # 将一个cookies容器和一个HTTP的cookie的处理器绑定 cookie_support = urllib.request.HTTPCookieProcessor(cookie_container) # 创建一个opener,设置一个handler用于处理http的url打开 opener = urllib.request.build_opener(cookie_support, urllib.request.HTTPHandler) # 安装opener，此后调用urlopen()时会使用安装过的opener对象 urllib.request.install_opener(opener) # 加密用户名 def getusername(self): username_req_qo = urllib.request.quote(self.username) username_bsencode = base64.b64encode(bytes(username_req_qo,encoding=&apos;utf-8&apos;)) return username_bsencode.decode(&quot;utf-8&quot;).split(&quot;=&quot;)[0] # 得到servertime,nonce,pubkey,rsakv # 输入用户名和密码之后（不登录）会出现一个prologin的预登陆的包 def getprelogin(self): prelogin_url = &quot;https://login.sina.com.cn/sso/prelogin.php?entry=weibo&amp;callback=sinaSSOController.preloginCallBack&amp;su=&#123;&#125;&amp;rsakt=mod&amp;checkpin=1&amp;client=ssologin.js(v1.4.19)&amp;_=1507974787556&quot;.format(self.getusername()) pre = re.compile(&apos;sinaSSOController.preloginCallBack(.*)&apos;) request = urllib.request.Request(prelogin_url) response = urllib.request.urlopen(request) read_data = response.read().decode(&quot;utf-8&quot;) date = pre.search(read_data).group(1)[1:-1] date_json = json.loads(date) servertime = str(date_json[&apos;servertime&apos;]) nonce = date_json[&apos;nonce&apos;] pubkey = date_json[&apos;pubkey&apos;] rsakv = date_json[&apos;rsakv&apos;] return servertime,nonce,pubkey,rsakv # 加密密码 def getpassword(self): servertime,nonce,pubkey,rsakv = self.getprelogin() pw_string = str(servertime) + &apos;\\t&apos; + str(nonce) + &apos;\\n&apos; + str(self.password) key = rsa.PublicKey(int(pubkey,16),65537) # 10001 == 65537 转10进制 pw_encrypt = rsa.encrypt(pw_string.encode(&apos;utf-8&apos;),key) self.password = &apos;&apos; # 安全起见~清空密码~ passwd = binascii.b2a_hex(pw_encrypt) return passwd # POST参数 def build_post_data(self): servertime, nonce, pubkey, rsakv = self.getprelogin() post_data = &#123; &apos;entry&apos;: &apos;weibo&apos;, &apos;gateway&apos;: &apos;1&apos;, &apos;from&apos;: &apos;&apos;, &apos;savestate&apos;: &apos;7&apos;, &apos;qrcode_flag&apos;: &apos;false&apos;, &apos;useticket&apos;: &apos;1&apos;, &quot;pagerefer&quot;:&quot;http://passport.weibo.com/visitor/visitor?entry=miniblog&amp;a=enter&amp;url=http%3A%2F%2Fweibo.com%2F&amp;domain=.weibo.com&amp;ua=php-sso_sdk_client-0.6.14&quot;, &apos;vsnf&apos;: &apos;1&apos;, &apos;su&apos;: self.getusername(), &apos;service&apos;:&apos;miniblog&apos;, &apos;servertime&apos;: servertime, &apos;nonce&apos;: nonce, &apos;pwencode&apos;: &apos;rsa2&apos;, &apos;rsakv&apos;: rsakv, &apos;sp&apos;: self.getpassword(), &apos;sr&apos;: &apos;1920 * 1080&apos;, &apos;ncoding&apos;: &apos;UTF - 8&apos;, &apos;prelt&apos;: &apos;912&apos;, &apos;url&apos;: &quot;http://weibo.com/ajaxlogin.php?framelogin=1&amp;callback=parent.sinaSSOController.feedBackUrlCallBack&quot;, &apos;returntype&apos;: &apos;META&apos; &#125; data = urllib.parse.urlencode(post_data).encode(&apos;utf-8&apos;) return data def login(self): url = &apos;https://login.sina.com.cn/sso/login.php?client=ssologin.js(v1.4.19)&apos; data = self.build_post_data() self.enableCookies() headers = &#123;&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36&quot;&#125; requests1 = urllib.request.Request(url,data=data,headers=headers) reqopen1 = urllib.request.urlopen(requests1) reqread1 = reqopen1.read().decode(&quot;GBK&quot;) bs = BeautifulSoup(reqread1,&apos;lxml&apos;) bfind = bs.find(&apos;script&apos;) for i in bfind: p = i.strip().split(&apos;&quot;&apos;)[1] requests2 = urllib.request.Request(p) reqopen2 = urllib.request.urlopen(requests2) reqread2 = reqopen2.read() bss = BeautifulSoup(reqread2,&apos;lxml&apos;) bff = bss.find_all(&apos;script&apos;)[1] try: p2 = re.compile(r&apos;location.replace(.*?);&#125;&apos;) p3 = re.compile(r&apos;&quot;userdomain&quot;:&quot;(.*?)&quot;&apos;) for i in bff: get_p2 = p2.findall(i)[0][2:-2] requests3 = urllib.request.Request(get_p2) reqopen3 = urllib.request.urlopen(requests3) reqread3 = reqopen3.read().decode(&apos;utf-8&apos;) userdomain = p3.findall(reqread3) login_url = &apos;http://weibo.com/&apos; + userdomain[0] requests4 = urllib.request.Request(login_url) reqopen4 = urllib.request.urlopen(requests4) reqread4 = reqopen4.read().decode(&apos;utf-8&apos;) bs_date = BeautifulSoup(reqread4,&apos;lxml&apos;) bfind_nick_uid = bs_date.find_all(&apos;script&apos;) nick_re = re.compile(&quot;CONFIG\\[&apos;nick&apos;\\]=&apos;.*?&apos;;&quot;) uin_re = re.compile(&quot;CONFIG\\[&apos;uid&apos;\\]=&apos;.*?&apos;;&quot;) for i in bfind_nick_uid[2]: print(&quot;Login success!&quot;) print(&quot;Usernmae:&quot;,nick_re.search(i.strip()).group().split(&apos;=&apos;)[1][1:-2],&quot;Uin:&quot;,uin_re.search(i).group().split(&apos;=&apos;)[1][1:-2]) except IndexError: print(&quot;Login Error!&quot;)if __name__ == &apos;__main__&apos;: w = WeiboLogin(&apos;&apos;,&apos;&apos;) w.login() 结果如下: Login success! Usernmae: 呆呆的设计师 Uin: 5513088073 到此结束,如果发现有啥地方不对劲或者没理解的地方可以在下面的评论区写下~Thanks~","path":"2017/10/18/weibo-login/","date":"10-18","excerpt":"在无声的世界里，默默地等待着他的出现 ----《声之形》 大概有两个月左右没更新过文章了，没想到还会有人来参观这个博客～访问人数在逐渐增加，这一点我挺开心的～最近也挺忙的……开学了不说～我还报了驾校，也快考科目一了，练习倒库练了一个礼拜，前一个小时倒进去没啥问题的，过了几个小时后又进不去了…….唉。行～废话也不多说，这次我介绍一下如何用Python来登录新浪微博~","tags":[{"name":"Python爬虫","slug":"Python爬虫","permalink":"http://yoursite.com/tags/Python%E7%88%AC%E8%99%AB/"}]}]}